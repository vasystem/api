// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: vasystem/api/v2/virtual_airlines.proto

package apiv2

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// VirtualAirlinesServiceClient is the client API for VirtualAirlinesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type VirtualAirlinesServiceClient interface {
	// Get virtual airline information.
	// This method does not require authentication.
	GetVirtualAirline(ctx context.Context, in *GetVirtualAirlineRequest, opts ...grpc.CallOption) (*GetVirtualAirlineResponse, error)
}

type virtualAirlinesServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewVirtualAirlinesServiceClient(cc grpc.ClientConnInterface) VirtualAirlinesServiceClient {
	return &virtualAirlinesServiceClient{cc}
}

func (c *virtualAirlinesServiceClient) GetVirtualAirline(ctx context.Context, in *GetVirtualAirlineRequest, opts ...grpc.CallOption) (*GetVirtualAirlineResponse, error) {
	out := new(GetVirtualAirlineResponse)
	err := c.cc.Invoke(ctx, "/vasystem.api.v2.VirtualAirlinesService/GetVirtualAirline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VirtualAirlinesServiceServer is the server API for VirtualAirlinesService service.
// All implementations must embed UnimplementedVirtualAirlinesServiceServer
// for forward compatibility
type VirtualAirlinesServiceServer interface {
	// Get virtual airline information.
	// This method does not require authentication.
	GetVirtualAirline(context.Context, *GetVirtualAirlineRequest) (*GetVirtualAirlineResponse, error)
	mustEmbedUnimplementedVirtualAirlinesServiceServer()
}

// UnimplementedVirtualAirlinesServiceServer must be embedded to have forward compatible implementations.
type UnimplementedVirtualAirlinesServiceServer struct {
}

func (UnimplementedVirtualAirlinesServiceServer) GetVirtualAirline(context.Context, *GetVirtualAirlineRequest) (*GetVirtualAirlineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVirtualAirline not implemented")
}
func (UnimplementedVirtualAirlinesServiceServer) mustEmbedUnimplementedVirtualAirlinesServiceServer() {
}

// UnsafeVirtualAirlinesServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to VirtualAirlinesServiceServer will
// result in compilation errors.
type UnsafeVirtualAirlinesServiceServer interface {
	mustEmbedUnimplementedVirtualAirlinesServiceServer()
}

func RegisterVirtualAirlinesServiceServer(s grpc.ServiceRegistrar, srv VirtualAirlinesServiceServer) {
	s.RegisterService(&VirtualAirlinesService_ServiceDesc, srv)
}

func _VirtualAirlinesService_GetVirtualAirline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVirtualAirlineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualAirlinesServiceServer).GetVirtualAirline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vasystem.api.v2.VirtualAirlinesService/GetVirtualAirline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualAirlinesServiceServer).GetVirtualAirline(ctx, req.(*GetVirtualAirlineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// VirtualAirlinesService_ServiceDesc is the grpc.ServiceDesc for VirtualAirlinesService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var VirtualAirlinesService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "vasystem.api.v2.VirtualAirlinesService",
	HandlerType: (*VirtualAirlinesServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVirtualAirline",
			Handler:    _VirtualAirlinesService_GetVirtualAirline_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vasystem/api/v2/virtual_airlines.proto",
}
