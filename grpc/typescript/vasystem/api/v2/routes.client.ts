/* eslint-disable */
// @generated by protobuf-ts 2.8.1 with parameter long_type_string,ts_nocheck,eslint_disable
// @generated from protobuf file "vasystem/api/v2/routes.proto" (package "vasystem.api.v2", syntax proto3)
// tslint:disable
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { RoutesService } from "./routes";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { ListRoutesResponse } from "./routes";
import type { ListRoutesRequest } from "./routes";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * Retrieve route information.
 *
 * @generated from protobuf service vasystem.api.v2.RoutesService
 */
export interface IRoutesServiceClient {
    /**
     * List routes. This is a paginated endpoint.
     *
     * @generated from protobuf rpc: ListRoutes(vasystem.api.v2.ListRoutesRequest) returns (vasystem.api.v2.ListRoutesResponse);
     */
    listRoutes(input: ListRoutesRequest, options?: RpcOptions): UnaryCall<ListRoutesRequest, ListRoutesResponse>;
}
/**
 * Retrieve route information.
 *
 * @generated from protobuf service vasystem.api.v2.RoutesService
 */
export class RoutesServiceClient implements IRoutesServiceClient, ServiceInfo {
    typeName = RoutesService.typeName;
    methods = RoutesService.methods;
    options = RoutesService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * List routes. This is a paginated endpoint.
     *
     * @generated from protobuf rpc: ListRoutes(vasystem.api.v2.ListRoutesRequest) returns (vasystem.api.v2.ListRoutesResponse);
     */
    listRoutes(input: ListRoutesRequest, options?: RpcOptions): UnaryCall<ListRoutesRequest, ListRoutesResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListRoutesRequest, ListRoutesResponse>("unary", this._transport, method, opt, input);
    }
}
