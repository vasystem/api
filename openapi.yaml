# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /v2/airlines:
        get:
            tags:
                - AirlinesService
            summary: List airlines
            description: List airlines
            operationId: AirlinesService_ListAirlines
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListAirlinesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
            security:
                - oauth2:
                    - airlines
    /v2/routes:
        get:
            tags:
                - RoutesService
            summary: List routes
            description: List routes. This is a paginated endpoint.
            operationId: RoutesService_ListRoutes
            parameters:
                - name: airlineId
                  in: query
                  description: 'Filter by airline. Example: `01gevxx0g090m0a78xmvhtfre4`'
                  schema:
                    type: string
                - name: departureIcao
                  in: query
                  description: 'Filter by departure airport. Example: `KJFK`'
                  schema:
                    type: string
                - name: arrivalIcao
                  in: query
                  description: 'Filter by arrival airport. Example: `YSSY`'
                  schema:
                    type: string
                - name: icaoFlightNumber
                  in: query
                  description: 'Filter by the flight number. This does not include the airline code. Example: `1234`'
                  schema:
                    type: string
                - name: includeArchived
                  in: query
                  description: Whether to include archived routes. Defaults to false.
                  schema:
                    type: boolean
                - name: pageSize
                  in: query
                  description: The maximum number of results to return. Defaults to 100. Maximum is 1000.
                  schema:
                    type: integer
                    format: uint64
                - name: pageToken
                  in: query
                  description: The next_page_token value returned from a previous List request, if any. If used, all other parameters must match the call that provided the token.
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListRoutesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
            security:
                - oauth2:
                    - routes
    /v2/virtual-airline:
        get:
            tags:
                - VirtualAirlinesService
            summary: Get virtual airline information
            description: |-
                Get virtual airline information.
                 This method does not require authentication.
            operationId: VirtualAirlinesService_GetVirtualAirline
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetVirtualAirlineResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        AircraftModel:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the aircraft model.
                aircraftType:
                    $ref: '#/components/schemas/AircraftType'
                airline:
                    $ref: '#/components/schemas/Airline'
                name:
                    type: string
                    description: "The name of the aircraft model. Example: `\tBoeing 737-824(WL)`"
            description: An AircraftModel resource represents a model of aircraft. An aircraft model is an aircraft type linked to an airline and its configuration (usually seating configuration).
        AircraftType:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier of the aircraft type.
                icaoCode:
                    type: string
                    description: 'The ICAO aircraft type code. Unique. Example: `B738`'
                iataCode:
                    type: string
                    description: 'The IATA aircraft type code. Example: `738`'
                name:
                    type: string
                    description: 'The name of the aircraft type. Example: `Boeing 737-800`'
            description: An AircraftType resource represents a type of aircraft, irrespective of the airline that operates it.
        Airline:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier for the airline.
                icaoCode:
                    type: string
                    description: 'The ICAO airline code. Unique. Example: `UAL`'
                iataCode:
                    type: string
                    description: 'The IATA airline code. This field is not unique. Example: `UA`'
                displayIcaoCode:
                    type: string
                    description: 'The ICAO airline display code. This is the code that is displayed to users and is usually the same as the ICAO code. However, some airlines have different display codes when they are a subsidiary of another airline, but use the same ICAO code as their parent company. As such, this field may not be unique. Example: `UAL`'
                displayIataCode:
                    type: string
                    description: 'The IATA airline display code. This is the code that is displayed to users and is usually the same as the IATA code. Currently, this will always be the same as the IATA code. Example: `UA`'
                name:
                    type: string
                    description: 'The airline name. Example: `United Airlines`'
            description: An Airline resource represents an airline.
        Airport:
            type: object
            properties:
                id:
                    type: string
                    description: The unique identifier of the airport.
                icaoCode:
                    type: string
                    description: The ICAO airport identifier. Unique.
                iataCode:
                    type: string
                    description: The IATA airport identifier. This field is not unique.
            description: An Airport resource represents an airport.
        Duration:
            type: object
            properties:
                seconds:
                    type: integer
                    description: 'Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years'
                    format: int64
                nanos:
                    type: integer
                    description: Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field. Must be from -999,999,999 to +999,999,999 inclusive.
                    format: int32
            description: 'A Duration represents a signed, fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like "day" or "month". It is related to Timestamp in that the difference between two Timestamp values is a Duration and it can be added or subtracted from a Timestamp. Range is approximately +-10,000 years. # Examples Example 1: Compute Duration from two Timestamps in pseudo code.     Timestamp start = ...;     Timestamp end = ...;     Duration duration = ...;     duration.seconds = end.seconds - start.seconds;     duration.nanos = end.nanos - start.nanos;     if (duration.seconds < 0 && duration.nanos > 0) {       duration.seconds += 1;       duration.nanos -= 1000000000;     } else if (duration.seconds > 0 && duration.nanos < 0) {       duration.seconds -= 1;       duration.nanos += 1000000000;     } Example 2: Compute Timestamp from Timestamp + Duration in pseudo code.     Timestamp start = ...;     Duration duration = ...;     Timestamp end = ...;     end.seconds = start.seconds + duration.seconds;     end.nanos = start.nanos + duration.nanos;     if (end.nanos < 0) {       end.seconds -= 1;       end.nanos += 1000000000;     } else if (end.nanos >= 1000000000) {       end.seconds += 1;       end.nanos -= 1000000000;     } Example 3: Compute Duration from datetime.timedelta in Python.     td = datetime.timedelta(days=3, minutes=10)     duration = Duration()     duration.FromTimedelta(td) # JSON Mapping In JSON format, the Duration type is encoded as a string rather than an object, where the string ends in the suffix "s" (indicating seconds) and is preceded by the number of seconds, with nanoseconds expressed as fractional seconds. For example, 3 seconds with 0 nanoseconds should be encoded in JSON format as "3s", while 3 seconds and 1 nanosecond should be expressed in JSON format as "3.000000001s", and 3 seconds and 1 microsecond should be expressed in JSON format as "3.000001s".'
        GetVirtualAirlineResponse:
            type: object
            properties:
                virtualAirline:
                    $ref: '#/components/schemas/VirtualAirline'
            description: The GetVirtualAirlineResponse message contains the response parameters for the GetVirtualAirline method.
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        ListAirlinesResponse:
            type: object
            properties:
                airlines:
                    type: array
                    items:
                        $ref: '#/components/schemas/Airline'
            description: The ListAirlinesResponse message defines the response parameters for the ListAirlines method.
        ListRoutesResponse:
            type: object
            properties:
                routes:
                    type: array
                    items:
                        $ref: '#/components/schemas/Route'
                    description: The list of routes.
                nextPageToken:
                    type: string
                    description: The next_page_token value to include in a subsequent List request. When paginating, all other parameters provided to List must match the call that provided the page token. When this field is empty, there are no more results. However, if the field is non-empty, there may not be any more results on the next page.
            description: The ListRoutesResponse message defines the response parameters for the ListRoutes method.
        Route:
            type: object
            properties:
                id:
                    type: string
                    description: The unique identifier for the route.
                airline:
                    $ref: '#/components/schemas/Airline'
                icaoFlightNumber:
                    type: string
                    description: 'This does not include the airline code. Example: `1234`'
                departure:
                    $ref: '#/components/schemas/Airport'
                arrival:
                    $ref: '#/components/schemas/Airport'
                departureTime:
                    $ref: '#/components/schemas/TimeOfDay'
                arrivalTime:
                    $ref: '#/components/schemas/TimeOfDay'
                duration:
                    $ref: '#/components/schemas/Duration'
                daysFlown:
                    type: array
                    items:
                        enum:
                            - DAY_OF_WEEK_UNSPECIFIED
                            - DAY_OF_WEEK_MONDAY
                            - DAY_OF_WEEK_TUESDAY
                            - DAY_OF_WEEK_WEDNESDAY
                            - DAY_OF_WEEK_THURSDAY
                            - DAY_OF_WEEK_FRIDAY
                            - DAY_OF_WEEK_SATURDAY
                            - DAY_OF_WEEK_SUNDAY
                        type: string
                        format: enum
                    description: The days of the week that this flight operates.
                aircraftModels:
                    type: array
                    items:
                        $ref: '#/components/schemas/AircraftModel'
                    description: The aircraft models that operate this route.
                archived:
                    type: boolean
                    description: Whether this route is archived. An archived route cannot be booked by pilots.
            description: A Route represents a regularly scheduled flight between two airports.
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        TimeOfDay:
            type: object
            properties:
                hours:
                    type: integer
                    description: Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
                    format: int32
                minutes:
                    type: integer
                    description: Minutes of hour of day. Must be from 0 to 59.
                    format: int32
                seconds:
                    type: integer
                    description: Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
                    format: int32
                nanos:
                    type: integer
                    description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
                    format: int32
            description: Represents a time of day. The date and time zone are either not significant or are specified elsewhere.
        VirtualAirline:
            type: object
            properties:
                name:
                    type: string
                    description: 'The name of the virtual airline. Example: `Star Alliance Virtual`'
                url:
                    type: string
                    description: 'The main website URL of the virtual airline. Example: `https://staralliancevirtual.org`'
            description: A VirtualAirline resource represents a virtual airline. All methods in the API operate on a single virtual airline.
    securitySchemes:
        oauth2:
            type: oauth2
            description: This API can only be accessed using the OAuth2 client credentials flow.
            flows:
                clientCredentials:
                    tokenUrl: /oauth2/token
                    scopes:
                        airlines: Access to the airlines API
                        routes: Access to the routes API
tags:
    - name: AirlinesService
      description: Retrieve airline information.
    - name: RoutesService
      description: Retrieve route information.
    - name: VirtualAirlinesService
      description: Retrieve virtual airline information.
