syntax = "proto3";

package vasystem.api.v2;

import "google/protobuf/duration.proto";
import "vasystem/api/v2/aircraft.proto";
import "vasystem/api/v2/airlines.proto";
import "vasystem/api/v2/airports.proto";
import "vasystem/api/v2/dayofweek.proto";
import "vasystem/api/v2/timeofday.proto";

// Retrieve route information.
service RoutesService {
  // List routes. This is a paginated endpoint.
  rpc ListRoutes(ListRoutesRequest) returns (ListRoutesResponse) {}
}

// The ListRoutesRequest message defines the request parameters for the
// ListRoutes method.
message ListRoutesRequest {
  // Filter by airline.
  // Example: `01gevxx0g090m0a78xmvhtfre4`
  string airline_id = 1;
  // Filter by departure airport.
  // Example: `KJFK`
  string departure_icao = 2;
  // Filter by arrival airport.
  // Example: `YSSY`
  string arrival_icao = 3;
  // Filter by the flight number. This does not include the airline code.
  // Example: `1234`
  string icao_flight_number = 4;

  // Whether to include archived routes. Defaults to false.
  bool include_archived = 5;

  // The maximum number of results to return. Defaults to 100. Maximum is 1000.
  uint64 page_size = 14;
  // The next_page_token value returned from a previous List request, if any.
  // If used, all other parameters must match the call that provided the token.
  string page_token = 15;
}

// The ListRoutesResponse message defines the response parameters for the
// ListRoutes method.
message ListRoutesResponse {
  // The list of routes.
  repeated Route routes = 1;

  // The next_page_token value to include in a subsequent List request. When
  // paginating, all other parameters provided to List must match the call that
  // provided the page token.
  // When this field is empty, there are no more results. However, if the
  // field is non-empty, there may not be any more results on the next page.
  string next_page_token = 2;
}

// A Route represents a regularly scheduled flight between two airports.
message Route {
  // The unique identifier for the route.
  string id = 1;

  // The airline that operates this route.
  Airline airline = 2;
  // This does not include the airline code.
  // Example: `1234`
  string icao_flight_number = 3;

  // The departure airport.
  Airport departure = 5;
  // The arrival airport.
  Airport arrival = 6;

  // The departure time is in UTC.
  TimeOfDay departure_time = 7;
  // The arrival time is in UTC.
  TimeOfDay arrival_time = 8;
  // The duration of this flight. This field is purely provided for convenience and can also
  // be calculated from the departure and arrival times.
  google.protobuf.Duration duration = 9;

  // The days of the week that this flight operates.
  repeated DayOfWeek days_flown = 10;

  // The aircraft models that operate this route.
  repeated AircraftModel aircraft_models = 11;

  // Whether this route is archived. An archived route cannot be booked by pilots.
  bool archived = 16;
}
